version: '3.8'

x-common-variables: &common-variables
  DOMAIN: ${DOMAIN:-wiktorbajor.com}
  EMAIL: ${EMAIL:-wiktorbajor1@gmail.com}

services:
  # Docusaurus development server
  dev:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./website/docs:/app/docs
      - ./website/blog:/app/blog
      - ./website/src/pages:/app/src/pages
      - ./website/docusaurus.config.js:/app/docusaurus.config.js
    command: npm start -- --host 0.0.0.0
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./scripts/nginx-start.sh:/usr/local/bin/nginx-start.sh:ro
      - certbot-etc:/etc/letsencrypt:ro
      - web-root:/var/www/certbot
    environment:
      <<: *common-variables
    command: ["/bin/sh", "/usr/local/bin/nginx-start.sh"]
    depends_on:
      - dev
      - cert-init
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
      - ./scripts/certbot-renew.sh:/usr/local/bin/certbot-renew.sh:ro
    depends_on:
      nginx:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/usr/local/bin/certbot-renew.sh"]
    restart: unless-stopped
    networks:
      - app-network

  cert-init:
    image: alpine:3.20
    volumes:
      - certbot-etc:/etc/letsencrypt
    entrypoint: ["/bin/sh", "-c"]
    command: |
      CERT_DIR=/etc/letsencrypt/live/wiktorbajor.com
      if [ ! -f "$CERT_DIR/fullchain.pem" ] || [ ! -f "$CERT_DIR/privkey.pem" ]; then
        echo "Generating temporary self-signed certificate..."
        mkdir -p "$CERT_DIR"
        apk add --no-cache openssl >/dev/null 2>&1
        openssl req -x509 -nodes -days 3 -newkey rsa:2048 \
          -keyout "$CERT_DIR/privkey.pem" \
          -out "$CERT_DIR/fullchain.pem" \
          -subj "/CN=wiktorbajor.com"
        echo "Temporary certificate created"
      else
        echo "Certificate files already exist, skipping initialization"
      fi
    restart: "no"
    networks:
      - app-network

volumes:
  certbot-etc:
  certbot-var:
  web-root:

networks:
  app-network:
    driver: bridge